// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @db.VarChar(100) @unique
  name String @db.VarChar(100)
  isMale Boolean? @db.Boolean
  dateOfBirth DateTime?  
  weight Float? @db.Real
  height Float? @db.Real
  email String @db.VarChar(100) @unique
  photoUrl String @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  histories History[]
  dashboard   Dashboard?

  @@map("users")
}

model History {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(255)
  weight     Float
  isBeverage Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String

  dashboard Dashboard? @relation(fields: [dashboard_id], references: [id])
  dashboard_id Int?
  @@map("histories")
}


model Dashboard {
  id                   Int        @id @default(autoincrement())
  user_id              String     @unique
  name                 String     @db.VarChar(100)
  daily_sugar          Float      @default(0) // Total gula harian
  weekly_sugar         Float      @default(0) // Total gula mingguan
  monthly_sugar        Float      @default(0) // Total gula bulanan
  daily_consume        Json?      // Konsumsi harian (list makanan/minuman + weight)
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt

  user                 User       @relation(fields: [user_id], references: [id]) // Relasi ke User
  histories            History[] // List konsumsi harian melalui relasi ke tabel History

  @@map("dashboards")
}


